missing <- colnames(returns)[colSums(is.na(returns))>0]
warning(paste("Imputed data breturns mean of the following firm(s):",paste(missing, collapse=' ')))}
returns <- zoo::na.aggregate(returns,FUN=mean,na.rm=T)
#------------
# data prep
#------------
y <- window(returns, start=(event_date-estimation_period-car_lag),end=(event_date+car_lead))
x1 <- window(regressor, start=(event_date-estimation_period-car_lag),end=(event_date+car_lead))
x2 <- time(y) %in% seq(as.Date(event_date-car_lag), as.Date(event_date+car_lead), "days")
#------------
# regression
#------------
z <- lm(y~x1+x2)
#------------
# generate output
#------------
out <- cbind(coef(z)[3,],
confint(z)[rep(c(FALSE,FALSE,TRUE),ncol(y)),])
out <- data.frame(out)
out$car <- out$ar * sum(ifelse(x2==TRUE,1,0))
out$firm <- rownames(out)
row.names(out) <- NULL
#------------
# generate output
#------------
out <- cbind(coef(z)[3,],
confint(z)[rep(c(FALSE,FALSE,TRUE),ncol(y)),])
colnames(out) <- c("ar","ci_lower","ci_upper")
out <- data.frame(out)
out$car <- out$ar * sum(ifelse(x2==TRUE,1,0))
out$firm <- rownames(out)
row.names(out) <- NULL
out <- out[c(5,1:4)]
View(out)
#------------
# data prep
#------------
y <- window(returns, start=(event_date-estimation_period-car_lag),end=(event_date-car_lag))
x1 <- window(regressor, start=(event_date-estimation_period-car_lag),end=(event_date-car_lag))
y2 <- window(returns, start=(event_date-car_lag),end=(event_date+car_lead))
x12 <- window(regressor, start=(event_date-car_lag),end=(event_date+car_lead))
#------------
# regression
#------------
z <- lm(y~x1)
m <- coef(z)
ar <- sapply(seq_along(x12),function(i){
y2[i,] - (m[1,] + m[2,]*x12[[i]])})
View(ar)
rowSums(ar)
rownames(ar)
out <- cbind(rowSums(ar),rownames(ar))
View(out)
out <- cbind(rownames(ar),rowSums(ar))
class(rowSums())
class(rowSums(ar))
out <- data.frame(firm=names(ar),car=rowSums(ar))
names(ar)
#------------
# output
#------------
ar <- sapply(seq_along(x12),function(i){
y2[i,] - (m[1,] + m[2,]*x12[[i]])})
names(ar)
out <- data.frame(firm=rownames(ar),car=rowSums(ar))
View(out)
row.names(out) <- NULL
View(out)
confint(ar)
confint(ar[,1])
confint(ar[1,])
ar[1,]
ar[[1,]]
class(ar[1,])
confint(c(1,2,4,1))
confint(1:3)
?confint
ci(1:3)
se(1:3)
sd(1:3)
sd(ar[1,])
sd(ar[1,])/3
sd(ar[1,])/sqrt(ncol(ar))
sd(ar)/sqrt(ncol(ar))
sd(ar[1,])/sqrt(ncol(ar))
sd(ar[1,])
ar[1,]
seq_along(nrow(ar))
seq_len(nrow(ar))
sapply(seq_len(nrow(ar)),function(i){
sd(ar[i,])/sqrt(ncol(ar))
})
tapply(seq_len(nrow(ar)),function(i){
sd(ar[i,])/sqrt(ncol(ar))
})
lapply(seq_len(nrow(ar)),function(i){
sd(ar[i,])/sqrt(ncol(ar))
})
sapply(seq_len(nrow(ar)),function(i){
sd(ar[i,])/sqrt(ncol(ar))
})
?sapply
vapply(seq_len(nrow(ar)),function(i){
sd(ar[i,])/sqrt(ncol(ar))
})
sapply(seq_len(nrow(ar)),function(i){
sd(ar[i,])/sqrt(ncol(ar))
})
mean(ar[i,])
sapply(seq_len(nrow(ar)),function(i){
mean(ar[i,])
sd(ar[i,])/sqrt(ncol(ar))
})
sapply(seq_len(nrow(ar)),function(i){
se <- sd(ar[i,])/sqrt(ncol(ar))
m <- mean(ar[i,])
c(m-se, m+se)
})
qnorm(0.975)
hist(ar[,1])
ar[1,]
hist(ar[1,])
hist(ar[2,])
hist(ar[3,])
hist(ar[5,])
hist(ar[6,])
sapply(seq_len(nrow(ar)),function(i){
se <- qnorm(0.975)*sd(ar[i,])/sqrt(ncol(ar))
m <- mean(ar[i,])
c(m-se, m+se)
})
ci <- sapply(seq_len(nrow(ar)),function(i){
se <- qnorm(0.975)*sd(ar[i,])/sqrt(ncol(ar))
m <- mean(ar[i,])
c(m-se, m+se)
})
t(ci)
#------------
# output
#------------
ar <- sapply(seq_along(x12),function(i){
y2[i,] - (m[1,] + m[2,]*x12[[i]])})
ci <- sapply(seq_len(nrow(ar)),function(i){
se <- qnorm(0.975)*sd(ar[i,])/sqrt(ncol(ar))
m <- mean(ar[i,])
c(m-se, m+se)
})
ci <- t(ci)
View(ci)
View(ar)
rowmean(ar)
rowMeans(ar)
rowMeans(ar)
out <- cbind(rowMeans(ar),ci)
View(out)
colnames(out) <- c("ar","ci_lower","ci_upper")
View(out)
out <- data.frame(out)
out$car <- rowSums(ar)
out$firm <- rownames(out)
row.names(out) <- NULL
out <- out[c(5,1:4)]
View(out)
#------------
ar <- sapply(seq_along(x12),function(i){
y2[i,] - (m[1,] + m[2,]*x12[[i]])})
ci <- sapply(seq_len(nrow(ar)),function(i){
se <- qnorm(0.975)*sd(ar[i,])/sqrt(ncol(ar))
m <- mean(ar[i,])
c(m-se, m+se)
})
ci <- t(ci)
out <- cbind(rowMeans(ar),ci)
colnames(out) <- c("ar_mean","ci_lower","ci_upper")
out <- data.frame(out)
out$car <- rowSums(ar)
out$firm <- rownames(out)
row.names(out) <- NULL
out <- out[c(5,1:4)]
View(out)
(colMeans(y,na.rm = T) - colMeans(y2,na.rm = T))
colMeans(y,na.rm = T)
colMeans(y2,na.rm = T)
t.test(y,y2)
t.test(y,y2,paired=FALSE)
?t.test
t.test(c(1,2,4,4),c(3,4,5,3))
t.test(c(1,2,4,4),c(3,4,5))
y
y2
t.test(y[1,],y2[1,])
y[1,]
y[[1,]]
y[1,]
class(y[1,])
as.numeric(y[1,]
)
t.test(as.numeric(y[1,]), as.numeric(y2[1,]))
mean(as.numeric(y[1,]))
t <- t.test(as.numeric(y[1,]), as.numeric(y2[1,]))
View(t)
t[["conf.int"]]
t[["conf.int"]]
t$statistic
t[["statistic"]]
mean(as.numeric(y[1,]))-mean(as.numeric(y2[1,]))
abs(mean(as.numeric(y[1,]))-mean(as.numeric(y2[1,])))
t[["estimate"]]
cbind(t[["conf.int"]],t[["estimate"]])
t[["conf.int"]]
t[["estimate"]][["mean of x"]]
t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]]
t[["estimate"]][["mean of y"]]-t[["estimate"]][["mean of x"]]
cbind(t[["conf.int"]],t[["estimate"]][["mean of y"]]-t[["estimate"]][["mean of x"]])
t[["conf.int"]][[]]
cbind(t(t[["conf.int"]]),t[["estimate"]][["mean of y"]]-t[["estimate"]][["mean of x"]])
cbind(t[["estimate"]][["mean of y"]]-t[["estimate"]][["mean of x"]],t(t[["conf.int"]]),)
cbind(t[["estimate"]][["mean of y"]]-t[["estimate"]][["mean of x"]],t(t[["conf.int"]]))
t <- t.test(as.numeric(y2[1,]), as.numeric(y[1,]))
t
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
y2
seq_len(ncol(y))
sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[1,]), as.numeric(y[1,]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
out <- sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[1,]), as.numeric(y[1,]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
t(out)
out <- sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[i,]), as.numeric(y[i,]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
seq_len(ncol(y))
(y2[2,]
)
y
y2[,i]
out <- sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[,i]), as.numeric(y[,i]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
t(out)
out <- sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[,i]), as.numeric(y[,i]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
View(out)
i = 1
as.numeric(y2[,i])
as.numeric(y[,i])
mean(as.numeric(y2[,i]))
mean(as.numeric(y[,i]))
t <- t.test(as.numeric(y2[,i]), as.numeric(y[,i]))
t
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
out <- t(out)
View(out)
names(y)
out <- data.frame(t(out))
out <- sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[,i]), as.numeric(y[,i]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
out <- t(out)
colnames(out) <- c("ar","ci_lower","ci_upper")
out$firm <- names(y)
View(out)
out <- sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[,i]), as.numeric(y[,i]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
out <- t(out)
colnames(out) <- c("ar","ci_lower","ci_upper")
View(out)
out$firm
names(y)
out <- sapply(seq_len(ncol(y)),function(i){
t <- t.test(as.numeric(y2[,i]), as.numeric(y[,i]))
cbind(t[["estimate"]][["mean of x"]]-t[["estimate"]][["mean of y"]],t(t[["conf.int"]]))
})
out <- t(out)
colnames(out) <- c("ar","ci_lower","ci_upper")
View(out)
out <- data.frame(out)
out$firm <- names(y)
View(out)
#------------
# output
#------------
c(1,2,4,5) - mean(c(4,3,1,0,5,1,-5,-6))
mean(c(1,2,4,5)) - mean(c(4,3,1,0,5,1,-5,-6))
#------------
# output
#------------
sum(c(1,2,4,5) - mean(c(4,3,1,0,5,1,-5,-6)))
4*mean(c(1,2,4,5)) - mean(c(4,3,1,0,5,1,-5,-6))
#------------
# output
#------------
sum(c(1,2,4,5) - mean(c(4,3,1,0,5,1,-5,-6)))
4*mean(c(1,2,4,5)) - mean(c(4,3,1,0,5,1,-5,-6))
as.numeric(y2[,i]) - mean(as.numeric(y[,i]))
ar <- sapply(seq_len(ncol(y)),function(i){
as.numeric(y2[,i]) - mean(as.numeric(y[,i]))})
View(ar)
ar[i,]
ar[,i]
qnorm(0.975)*sd(ar[,i])/sqrt(nrow(ar))
ar <- sapply(seq_len(ncol(y)),function(i){
as.numeric(y2[,i]) - mean(as.numeric(y[,i]))})
ci <- sapply(seq_len(nrow(ar)),function(i){
se <- qnorm(0.975)*sd(ar[,i])/sqrt(nrow(ar))
m <- mean(ar[,i])
c(m-se, m+se)
})
ci
ci <- sapply(seq_len(ncol(ar)),function(i){
se <- qnorm(0.975)*sd(ar[,i])/sqrt(nrow(ar))
m <- mean(ar[,i])
c(m-se, m+se)
})
ci
ci <- t(ci)
ci
ar
ar <- sapply(seq_len(ncol(y)),function(i){
as.numeric(y2[,i]) - mean(as.numeric(y[,i]))})
ci <- sapply(seq_len(ncol(ar)),function(i){
se <- qnorm(0.975)*sd(ar[,i])/sqrt(nrow(ar))
m <- mean(ar[,i])
c(m-se, m+se)
})
ci <- t(ci)
View(ci)
colMeans(ar)
#------------
# output
#------------
out <- cbind(colMeans(ar),ci)
colnames(out) <- c("ar_mean","ci_lower","ci_upper")
out <- data.frame(out)
out$car <- colSums(ar)
View(out)
names(y)
out$firm <- names(y)
row.names(out) <- NULL
View(out)
out <- out[c(5,1:4)]
event_date = as.Date("2016-11-20")
returns = tech_returns[,2:19]
regressor = tech_returns[,1]
car_lag = 1
car_lead = 5
estimation_period=250
#------------
# handling missing data
#------------
# fast mean imputation
if(any(colSums(is.na(returns))>0)){
missing <- colnames(returns)[colSums(is.na(returns))>0]
warning(paste("Imputed data breturns mean of the following firm(s):",paste(missing, collapse=' ')))}
returns <- zoo::na.aggregate(returns,FUN=mean,na.rm=T)
#------------
# data prep
#------------
# estimation period data
y <- window(returns, start=(event_date-estimation_period-car_lag),end=(event_date-car_lag))
# event period data
y2 <- window(returns, start=(event_date-car_lag),end=(event_date+car_lead))
#------------
# abnormal returns
#------------
ar <- sapply(seq_len(ncol(y)),function(i){
as.numeric(y2[,i]) - mean(as.numeric(y[,i]))})
ci <- sapply(seq_len(ncol(ar)),function(i){
se <- qnorm(0.975)*sd(ar[,i])/sqrt(nrow(ar))
m <- mean(ar[,i])
c(m-se, m+se)
})
ci <- t(ci)
#------------
# output
#------------
out <- cbind(colMeans(ar),ci)
colnames(out) <- c("ar_mean","ci_lower","ci_upper")
out <- data.frame(out)
out$car <- colSums(ar)
out$firm <- names(y)
row.names(out) <- NULL
out <- out[c(5,1:4)]
View(out)
library(estudy2)
tickers <- c("^NDX","MSFT","AMZ","AAPL","GOOG","FB","BABA","INTC","PYPL",
"NVDA","TSLA","ATVI","AMD","EA","MTCH","TTD","ZG","YELP","TIVO")
prices <- get_prices_from_tickers(tickers,
start = as.Date("2015-11-01"),
end = as.Date("2019-12-30"),
quote = "Close",
retclass = "zoo")
rates <- get_rates_from_prices(prices,
quote = "Close",
multi_day = TRUE,
compounding = "continuous")
returns <- rates
saveRDS(returns,"./data/tech_returns.rds")
tech_returns <- readRDS("~/Dropbox/tech/R_programming/az/code/event2car/data/tech_returns.rds")
event_date = as.Date("2018-12-16")
returns = tech_returns[,2:19]
regressor = tech_returns[,1]
car_lag = 1
car_lead = 5
estimation_period=250
#------------
# handling missing data
#------------
# fast mean imputation
if(any(colSums(is.na(returns))>0)){
missing <- colnames(returns)[colSums(is.na(returns))>0]
warning(paste("Imputed data breturns mean of the following firm(s):",paste(missing, collapse=' ')))}
returns <- zoo::na.aggregate(returns,FUN=mean,na.rm=T)
y <- window(returns, start=(event_date-estimation_period-car_lag),end=(event_date-car_lag))
# event period data
y2 <- window(returns, start=(event_date-car_lag),end=(event_date+car_lead))
#------------
# abnormal returns
#------------
ar <- sapply(seq_len(ncol(y)),function(i){
as.numeric(y2[,i]) - mean(as.numeric(y[,i]))})
ci <- sapply(seq_len(ncol(ar)),function(i){
se <- qnorm(0.975)*sd(ar[,i])/sqrt(nrow(ar))
m <- mean(ar[,i])
c(m-se, m+se)
})
ci <- t(ci)
#------------
# output
#------------
out <- cbind(colMeans(ar),ci)
colnames(out) <- c("ar_mean","ci_lower","ci_upper")
out <- data.frame(out)
out$car <- colSums(ar)
out$firm <- names(y)
row.names(out) <- NULL
out <- out[c(5,1:4)]
View(out)
estimation_period=150
event_date = as.Date("2016-11-20")
#------------
# handling missing data
#------------
# fast mean imputation
if(any(colSums(is.na(returns))>0)){
missing <- colnames(returns)[colSums(is.na(returns))>0]
warning(paste("Imputed data breturns mean of the following firm(s):",paste(missing, collapse=' ')))}
returns <- zoo::na.aggregate(returns,FUN=mean,na.rm=T)
#------------
# data prep
#------------
# estimation period data
y <- window(returns, start=(event_date-estimation_period-car_lag),end=(event_date-car_lag))
# event period data
y2 <- window(returns, start=(event_date-car_lag),end=(event_date+car_lead))
#------------
# abnormal returns
#------------
ar <- sapply(seq_len(ncol(y)),function(i){
as.numeric(y2[,i]) - mean(as.numeric(y[,i]))})
ci <- sapply(seq_len(ncol(ar)),function(i){
se <- qnorm(0.975)*sd(ar[,i])/sqrt(nrow(ar))
m <- mean(ar[,i])
c(m-se, m+se)
})
ci <- t(ci)
#------------
# output
#------------
out <- cbind(colMeans(ar),ci)
colnames(out) <- c("ar_mean","ci_lower","ci_upper")
out <- data.frame(out)
out$car <- colSums(ar)
out$firm <- names(y)
row.names(out) <- NULL
out <- out[c(5,1:4)]
View(out)
length(tech_returns)
nrow(tech_returns)
########################################
# sanity checks
########################################
nrow(regressor)
dim(regressor)
regressor = tech_returns[,1]
returns = tech_returns[,2:19]
########################################
# sanity checks
########################################
nrow(regressor)
########################################
# sanity checks
########################################
length(regressor)
dim(regressor)
NROW(regressor)
NROW(returns)
nrow(returns)
nrow(regressor)
length(returns)
?checkmate
